// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// USER SCHEMA
model User {
    id               String              @id @default(uuid())
    name             String
    email            String              @unique
    role             String              @default("user")
    password         String
    description      String?
    image            String?
    organization     String?
    location         String?
    skills           String?
    resume           String?
    noOfFollowers    Int                 @default(0)
    noOfFollowings   Int                 @default(0)
    isAccountDeleted Boolean             @default(false)
    createdAt        DateTime            @default(now())
    followers        Follower[]          @relation("UserFollowing")
    followed         Follower[]          @relation("UserFollowed")
    requestSent      InterviewRequests[] @relation("userSent")
    requestRecived   InterviewRequests[] @relation("userRecived")
}

// FOLLOW SCHEMA

model Follower {
    id         String @id @default(uuid())
    userId     String
    followerId String
    followed   User   @relation("UserFollowed", fields: [userId], references: [id])
    follower   User   @relation("UserFollowing", fields: [followerId], references: [id])
}

model InterviewRequests {
    id        String   @id @default(uuid())
    from      String
    to        String
    createdAt DateTime @default(now())
    fromuser  User     @relation("userSent", fields: [from], references: [id])
    touser    User     @relation("userRecived", fields: [to], references: [id])
}
